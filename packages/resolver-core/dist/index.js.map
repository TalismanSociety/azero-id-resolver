{"version":3,"sources":["../src/deployments/azns_router/metadata.json","../src/index.ts","../src/constants.ts","../src/deployments.ts","../src/queries/resolveAddressToDomain.ts","../src/helpers/ErrorBase.ts","../src/helpers/getAbiMessage.ts","../src/helpers/decodeOutput.ts","../src/helpers/getApi.ts","../src/helpers/getGasLimit.ts","../src/helpers/getRouterContract.ts","../src/queries/resolveDomainToAddress.ts","../src/utils/sanitizeDomain.ts"],"sourcesContent":["{\"source\":{\"hash\":\"0x63308c1311af44bb47082327c301fce559ca28f6bb010a61b9884d9246746abf\",\"language\":\"ink! 4.2.1\",\"compiler\":\"rustc 1.68.0-nightly\",\"build_info\":{\"build_mode\":\"Release\",\"cargo_contract_version\":\"3.0.1\",\"rust_toolchain\":\"nightly-aarch64-apple-darwin\",\"wasm_opt_settings\":{\"keep_debug_symbols\":false,\"optimization_passes\":\"Z\"}}},\"contract\":{\"name\":\"azns_router\",\"version\":\"1.0.0\",\"authors\":[\"AZERO.ID <hello@azero.id>\"]},\"spec\":{\"constructors\":[{\"args\":[{\"label\":\"admin\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}}],\"default\":false,\"docs\":[],\"label\":\"new\",\"payable\":false,\"returnType\":{\"displayName\":[\"ink_primitives\",\"ConstructorResult\"],\"type\":6},\"selector\":\"0x9bae9d5e\"}],\"docs\":[],\"environment\":{\"accountId\":{\"displayName\":[\"AccountId\"],\"type\":0},\"balance\":{\"displayName\":[\"Balance\"],\"type\":25},\"blockNumber\":{\"displayName\":[\"BlockNumber\"],\"type\":28},\"chainExtension\":{\"displayName\":[\"ChainExtension\"],\"type\":29},\"hash\":{\"displayName\":[\"Hash\"],\"type\":26},\"maxEventTopics\":4,\"timestamp\":{\"displayName\":[\"Timestamp\"],\"type\":27}},\"events\":[],\"lang_error\":{\"displayName\":[\"ink\",\"LangError\"],\"type\":8},\"messages\":[{\"args\":[{\"label\":\"tld\",\"type\":{\"displayName\":[\"Vec\"],\"type\":4}},{\"label\":\"registry_addr\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}}],\"default\":false,\"docs\":[],\"label\":\"add_registry\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":9},\"selector\":\"0xc997efe3\"},{\"args\":[{\"label\":\"tld\",\"type\":{\"displayName\":[\"Vec\"],\"type\":4}},{\"label\":\"registry_addr\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}}],\"default\":false,\"docs\":[],\"label\":\"update_registry\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":9},\"selector\":\"0x562de86b\"},{\"args\":[{\"label\":\"registry_addr\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}}],\"default\":false,\"docs\":[],\"label\":\"remove_registry_address\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":9},\"selector\":\"0xcc78aead\"},{\"args\":[],\"default\":false,\"docs\":[],\"label\":\"get_all_registries\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":12},\"selector\":\"0xe6da7bf0\"},{\"args\":[],\"default\":false,\"docs\":[],\"label\":\"get_all_tlds\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":15},\"selector\":\"0xf1a7af41\"},{\"args\":[{\"label\":\"registry_addr\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}}],\"default\":false,\"docs\":[],\"label\":\"get_associated_tlds\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":15},\"selector\":\"0xcb18f821\"},{\"args\":[{\"label\":\"tld\",\"type\":{\"displayName\":[\"String\"],\"type\":5}}],\"default\":false,\"docs\":[],\"label\":\"get_registry\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":16},\"selector\":\"0x15a5d20a\"},{\"args\":[{\"label\":\"domain\",\"type\":{\"displayName\":[\"String\"],\"type\":5}}],\"default\":false,\"docs\":[],\"label\":\"get_address\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":18},\"selector\":\"0xd259f7ba\"},{\"args\":[{\"label\":\"account\",\"type\":{\"displayName\":[\"AccountId\"],\"type\":0}},{\"label\":\"tld\",\"type\":{\"displayName\":[\"Option\"],\"type\":20}}],\"default\":false,\"docs\":[\" @returns list of (registry-address, primary-domain) for given account\"],\"label\":\"get_primary_domains\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":21},\"selector\":\"0xdf3a358e\"},{\"args\":[],\"default\":false,\"docs\":[],\"label\":\"get_admin\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":24},\"selector\":\"0x57b8a8a7\"},{\"args\":[],\"default\":false,\"docs\":[],\"label\":\"get_pending_admin\",\"mutates\":false,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":16},\"selector\":\"0xbcd31d76\"},{\"args\":[{\"label\":\"account\",\"type\":{\"displayName\":[\"Option\"],\"type\":17}}],\"default\":false,\"docs\":[],\"label\":\"transfer_ownership\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":9},\"selector\":\"0x107e33ea\"},{\"args\":[],\"default\":false,\"docs\":[],\"label\":\"accept_ownership\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":9},\"selector\":\"0xb55be9f0\"},{\"args\":[{\"label\":\"code_hash\",\"type\":{\"displayName\":[],\"type\":1}}],\"default\":false,\"docs\":[],\"label\":\"upgrade_contract\",\"mutates\":true,\"payable\":false,\"returnType\":{\"displayName\":[\"ink\",\"MessageResult\"],\"type\":6},\"selector\":\"0x1345543d\"}]},\"storage\":{\"root\":{\"layout\":{\"struct\":{\"fields\":[{\"layout\":{\"leaf\":{\"key\":\"0x00000000\",\"ty\":0}},\"name\":\"admin\"},{\"layout\":{\"enum\":{\"dispatchKey\":\"0x00000000\",\"name\":\"Option\",\"variants\":{\"0\":{\"fields\":[],\"name\":\"None\"},\"1\":{\"fields\":[{\"layout\":{\"leaf\":{\"key\":\"0x00000000\",\"ty\":0}},\"name\":\"0\"}],\"name\":\"Some\"}}}},\"name\":\"pending_admin\"},{\"layout\":{\"leaf\":{\"key\":\"0x00000000\",\"ty\":3}},\"name\":\"registry\"},{\"layout\":{\"root\":{\"layout\":{\"leaf\":{\"key\":\"0x00000064\",\"ty\":0}},\"root_key\":\"0x00000064\"}},\"name\":\"routes\"},{\"layout\":{\"root\":{\"layout\":{\"leaf\":{\"key\":\"0x00000065\",\"ty\":4}},\"root_key\":\"0x00000065\"}},\"name\":\"associated_tlds\"}],\"name\":\"Router\"}},\"root_key\":\"0x00000000\"}},\"types\":[{\"id\":0,\"type\":{\"def\":{\"composite\":{\"fields\":[{\"type\":1,\"typeName\":\"[u8; 32]\"}]}},\"path\":[\"ink_primitives\",\"types\",\"AccountId\"]}},{\"id\":1,\"type\":{\"def\":{\"array\":{\"len\":32,\"type\":2}}}},{\"id\":2,\"type\":{\"def\":{\"primitive\":\"u8\"}}},{\"id\":3,\"type\":{\"def\":{\"sequence\":{\"type\":0}}}},{\"id\":4,\"type\":{\"def\":{\"sequence\":{\"type\":5}}}},{\"id\":5,\"type\":{\"def\":{\"primitive\":\"str\"}}},{\"id\":6,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":7}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":7},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":7,\"type\":{\"def\":{\"tuple\":[]}}},{\"id\":8,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"index\":1,\"name\":\"CouldNotReadInput\"}]}},\"path\":[\"ink_primitives\",\"LangError\"]}},{\"id\":9,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":10}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":10},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":10,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":7}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":11}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":7},{\"name\":\"E\",\"type\":11}],\"path\":[\"Result\"]}},{\"id\":11,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"index\":0,\"name\":\"NotAdmin\"},{\"index\":1,\"name\":\"InvalidRegistryAddress\"},{\"fields\":[{\"type\":5,\"typeName\":\"String\"}],\"index\":2,\"name\":\"TldAlreadyInUse\"},{\"fields\":[{\"type\":5,\"typeName\":\"String\"}],\"index\":3,\"name\":\"TldNotFound\"},{\"index\":4,\"name\":\"CouldNotResolveDomain\"},{\"index\":5,\"name\":\"InvalidDomainName\"},{\"index\":6,\"name\":\"EmptyList\"}]}},\"path\":[\"azns_router\",\"azns_router\",\"Error\"]}},{\"id\":12,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":13}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":13},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":13,\"type\":{\"def\":{\"sequence\":{\"type\":14}}}},{\"id\":14,\"type\":{\"def\":{\"tuple\":[0,4]}}},{\"id\":15,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":4}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":4},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":16,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":17}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":17},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":17,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"index\":0,\"name\":\"None\"},{\"fields\":[{\"type\":0}],\"index\":1,\"name\":\"Some\"}]}},\"params\":[{\"name\":\"T\",\"type\":0}],\"path\":[\"Option\"]}},{\"id\":18,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":19}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":19},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":19,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":0}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":11}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":0},{\"name\":\"E\",\"type\":11}],\"path\":[\"Result\"]}},{\"id\":20,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"index\":0,\"name\":\"None\"},{\"fields\":[{\"type\":5}],\"index\":1,\"name\":\"Some\"}]}},\"params\":[{\"name\":\"T\",\"type\":5}],\"path\":[\"Option\"]}},{\"id\":21,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":22}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":22},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":22,\"type\":{\"def\":{\"sequence\":{\"type\":23}}}},{\"id\":23,\"type\":{\"def\":{\"tuple\":[0,5]}}},{\"id\":24,\"type\":{\"def\":{\"variant\":{\"variants\":[{\"fields\":[{\"type\":0}],\"index\":0,\"name\":\"Ok\"},{\"fields\":[{\"type\":8}],\"index\":1,\"name\":\"Err\"}]}},\"params\":[{\"name\":\"T\",\"type\":0},{\"name\":\"E\",\"type\":8}],\"path\":[\"Result\"]}},{\"id\":25,\"type\":{\"def\":{\"primitive\":\"u128\"}}},{\"id\":26,\"type\":{\"def\":{\"composite\":{\"fields\":[{\"type\":1,\"typeName\":\"[u8; 32]\"}]}},\"path\":[\"ink_primitives\",\"types\",\"Hash\"]}},{\"id\":27,\"type\":{\"def\":{\"primitive\":\"u64\"}}},{\"id\":28,\"type\":{\"def\":{\"primitive\":\"u32\"}}},{\"id\":29,\"type\":{\"def\":{\"variant\":{}},\"path\":[\"ink_env\",\"types\",\"NoChainExtension\"]}}],\"version\":\"4\"}\n","// @index(['./*.ts','./queries/*.ts','./utils/*.ts'], f => `export * from '${f.path}'`)\nexport * from './constants'\nexport * from './deployments'\nexport * from './queries/resolveAddressToDomain'\nexport * from './queries/resolveDomainToAddress'\nexport * from './types.d'\nexport * from './utils/sanitizeDomain'\n// @endindex\n","import { Chain } from './types'\n\n/**\n * Supported Chains\n */\nexport enum SupportedChainId {\n  AlephZero = 'alephzero',\n  AlephZeroTestnet = 'alephzero-testnet',\n  Development = 'development',\n}\nexport const allSupportedChainIds = Object.values(SupportedChainId)\n\n/**\n * Chains\n */\nexport const alephzero: Chain = {\n  network: SupportedChainId.AlephZero,\n  name: 'Aleph Zero',\n  ss58Prefix: 42,\n  rpcUrls: ['wss://ws.azero.dev'],\n}\nexport const alephzeroTestnet: Chain = {\n  network: SupportedChainId.AlephZeroTestnet,\n  name: 'Aleph Zero Testnet',\n  ss58Prefix: 42,\n  rpcUrls: ['wss://ws.test.azero.dev'],\n  testnet: true,\n}\nexport const development: Chain = {\n  network: SupportedChainId.Development,\n  name: 'Local Development',\n  ss58Prefix: 42,\n  rpcUrls: ['ws://127.0.0.1:9944'],\n  testnet: true,\n}\n\nexport const allChains: Chain[] = [alephzero, alephzeroTestnet, development]\n\n/**\n * Supported TLDs\n */\nexport enum SupportedTLD {\n  AZERO = 'azero',\n  A0 = 'a0',\n  TZERO = 'tzero',\n}\n\n/**\n * Contracts IDs & Addresses\n */\nexport enum ContractId {\n  Router = 'azns_router',\n  Registry = 'azns_registry',\n  FeeCalculator = 'azns_fee_calculator',\n  MerkleVerifier = 'azns_merkle_verifier',\n  NameChecker = 'azns_name_checker',\n}\n\nexport type ContractAddresses = { [_ in ContractId]?: string }\n\nexport const CONTRACT_ADDRESSES: {\n  [_ in SupportedChainId]?: ContractAddresses\n} = {\n  [SupportedChainId.AlephZero]: {\n    [ContractId.Router]: '5FfRtDtpS3Vcr7BTChjPiQNrcAKu3VLv4E1NGF6ng6j3ZopJ',\n  },\n  [SupportedChainId.AlephZeroTestnet]: {\n    [ContractId.Router]: '5HXjj3xhtRMqRYCRaXTDcVPz3Mez2XBruyujw6UEkvn8PCiA',\n  },\n}\n","import { ApiPromise } from '@polkadot/api'\nimport { ContractPromise } from '@polkadot/api-contract'\nimport log from 'loglevel'\nimport {\n  CONTRACT_ADDRESSES,\n  ContractAddresses,\n  ContractId,\n  SupportedChainId,\n  SupportedTLD,\n} from './constants'\n\n/**\n * Returns supported TLDs for a given chain.\n */\nexport const getSupportedTLDs = (chainId: SupportedChainId) => {\n  const tlds: {\n    [_ in SupportedChainId]?: SupportedTLD[]\n  } = {\n    [SupportedChainId.AlephZero]: [SupportedTLD.AZERO, SupportedTLD.A0],\n    [SupportedChainId.AlephZeroTestnet]: [SupportedTLD.TZERO],\n  }\n  return tlds[chainId] || []\n}\n\n/**\n * Imports & returns metadata.json (abi) for a given contract.\n */\nexport const getContractAbi = async (contractId: ContractId) => {\n  const abis: {\n    [_ in ContractId]?: any\n  } = {\n    [ContractId.Router]: import(`./deployments/azns_router/metadata.json`),\n    // NOTE: Redundant contracts are not included for now to reduce bundle size\n    // [ContractId.Registry]: import(`./deployments/azns_registry/metadata.json`),\n    // [ContractId.FeeCalculator]: import(`./deployments/azns_fee_calculator/metadata.json`),\n    // [ContractId.MerkleVerifier]: import(`./deployments/azns_merkle_verifier/metadata.json`),\n    // [ContractId.NameChecker]: import(`./deployments/azns_name_checker/metadata.json`),\n  }\n  return await abis[contractId]\n}\n\n/**\n * Returns contract address for a given chain & contract.\n * If `customContractAddresses` are provided, they will overwrite of the default ones.\n * NOTE: To use the local `development` network, `customContractAddresses` must be provided.\n */\nexport const getContractAddress = (\n  chainId: SupportedChainId,\n  contractId: ContractId,\n  customContractAddresses?: ContractAddresses,\n) => {\n  return customContractAddresses?.[contractId] ?? CONTRACT_ADDRESSES[chainId]?.[contractId]\n}\n\n/**\n * Determines contract details based on chain & identifier, then returns a `ContractPromise` instance.\n */\nexport const getContract = async (\n  api: ApiPromise,\n  chainId: SupportedChainId,\n  contractId: ContractId,\n  customContractAddresses?: ContractAddresses,\n) => {\n  const abi = await getContractAbi(contractId)\n  if (!abi) throw new Error(`No metadata found for contract '${contractId}'.`)\n\n  const address = getContractAddress(chainId, contractId, customContractAddresses)\n  if (!address)\n    throw new Error(`No address found for contract '${contractId}' on chain '${chainId}'.`)\n\n  const contract = new ContractPromise(api, abi, address)\n  log.debug(`Initialized contract '${contractId}' at address '${address}'`)\n\n  return {\n    abi,\n    address,\n    contract,\n  }\n}\n","import { hexToU8a, isHex } from '@polkadot/util'\nimport { checkAddress, decodeAddress, encodeAddress } from '@polkadot/util-crypto'\nimport log from 'loglevel'\nimport { SupportedChainId, allSupportedChainIds } from '../constants'\nimport { ErrorBase } from '../helpers/ErrorBase'\nimport { decodeOutput } from '../helpers/decodeOutput'\nimport { getApi } from '../helpers/getApi'\nimport { getMaxGasLimit } from '../helpers/getGasLimit'\nimport { getRouterContract } from '../helpers/getRouterContract'\nimport { BaseResolveOptions } from '../types'\n\nexport type ResolveAddressErrorName =\n  | 'UNSUPPORTED_NETWORK'\n  | 'INVALID_ADDRESS_FORMAT'\n  | 'CONTRACT_ERROR'\n  | 'OTHER_ERROR'\nexport class ResolveAddressError extends ErrorBase<ResolveAddressErrorName> {}\n\n/**\n * @param ignoreAddressPrefix If true, the current chain ss58 prefix will be ignored and the address will be decoded with any prefix\n */\nexport type ResolveAddressOptions = BaseResolveOptions & {\n  ignoreAddressPrefix?: boolean\n}\n\n/**\n * Resolves a given address to the assigned primary domain(s).\n * NOTE: When an address holds primary domains within multiple registries (TLDs),\n *       all primary domains will be returned. This case is currently not possible,\n *       so `allPrimaryDomains` will always return an array with 0 or 1 primary domain.\n * @param address Address to resolve (e.g. `5EFJEY4DG2FnzcuCZpnRjjzT4x7heeEXuoYy1yAoUmshEhAP`)\n * @param options Options (see `ResolveOptions` definition)\n * @returns Primary domain(s) as string (null, if no primary domain found) or error\n */\nexport const resolveAddressToDomain = async (\n  address: string,\n  options?: Partial<ResolveAddressOptions>,\n): Promise<\n  | { primaryDomain: string | null; allPrimaryDomains: string[]; error: undefined }\n  | { primaryDomain: undefined; allPrimaryDomains: undefined; error: ResolveAddressError }\n> => {\n  try {\n    // Merge default options\n    const _o: ResolveAddressOptions = Object.assign(\n      {\n        chainId: SupportedChainId.AlephZero,\n      },\n      options,\n    )\n    log.setLevel(_o.debug ? 'DEBUG' : 'WARN')\n\n    // Check if given chainId is supported\n    if (!allSupportedChainIds.includes(_o.chainId)) {\n      return {\n        primaryDomain: undefined,\n        allPrimaryDomains: undefined,\n        error: new ResolveAddressError({\n          name: 'UNSUPPORTED_NETWORK',\n          message: `Unsupported chainId '${\n            _o.chainId\n          }' (must be one of: ${allSupportedChainIds.join(', ')})`,\n        }),\n      }\n    }\n\n    // Initialize API & contract\n    const api = _o?.customApi || (await getApi(_o.chainId))\n    const routerContract = await getRouterContract(api, _o.chainId, _o.customContractAddresses)\n\n    // Check address validity and convert if necessary\n    let _address = (address || '').trim()\n    const prefix = api.registry.chainSS58 || 42\n    try {\n      if (!_o.ignoreAddressPrefix) {\n        // Strictly check validity with chain prefix\n        const isValid = checkAddress(_address, prefix)[0]\n        if (!isValid) throw new Error()\n      } else {\n        // Try to decode address with any prefix (and encode with chain prefix)\n        _address = encodeAddress(\n          isHex(address) ? hexToU8a(address) : decodeAddress(address),\n          prefix,\n        )\n      }\n    } catch (_) {\n      return {\n        primaryDomain: undefined,\n        allPrimaryDomains: undefined,\n        error: new ResolveAddressError({\n          name: 'INVALID_ADDRESS_FORMAT',\n          message: `Address must have valid SS58 format`,\n        }),\n      }\n    }\n\n    // Query contract\n    const response = await routerContract.query.getPrimaryDomains(\n      '',\n      { gasLimit: getMaxGasLimit(api) },\n      _address,\n      null,\n    )\n\n    let allPrimaryDomains: string[] = []\n    const { output, isError, decodedOutput } = decodeOutput(\n      response,\n      routerContract,\n      'get_primary_domains',\n    )\n    if (isError) {\n      const message = decodedOutput\n        ? `Contract error while resolving address '${_address}': ${decodedOutput}`\n        : `Contract failed while resolving address '${_address}' without error message`\n      log.error(message)\n      return {\n        primaryDomain: undefined,\n        allPrimaryDomains: undefined,\n        error: new ResolveAddressError({\n          name: 'CONTRACT_ERROR',\n          message,\n          cause: decodedOutput,\n        }),\n      }\n    } else if (!isError) {\n      allPrimaryDomains = (output || []).map(([, domain]: string[]) => domain)\n    }\n\n    const primaryDomain = allPrimaryDomains?.length ? allPrimaryDomains[0] : null\n\n    log.debug(\n      primaryDomain\n        ? `Resolved primary domain for address '${_address}': ${primaryDomain}`\n        : `No primary domain found for address '${_address}'`,\n    )\n    return { primaryDomain, allPrimaryDomains, error: undefined }\n  } catch (error) {\n    log.debug(`Error while resolving address '${address}':`, error)\n    return {\n      primaryDomain: undefined,\n      allPrimaryDomains: undefined,\n      error: new ResolveAddressError({\n        name: 'OTHER_ERROR',\n        message: (error as any)?.message || 'Unexpected error while resolving address',\n        cause: error,\n      }),\n    }\n  }\n}\n","// Source: https://engineering.udacity.com/handling-errors-like-a-pro-in-typescript-d7a314ad4991\nexport class ErrorBase<T extends string> extends Error {\n  name: T\n  message: string\n  cause: any\n\n  constructor({ name, message, cause }: { name: T; message: string; cause?: any }) {\n    super()\n    this.name = name\n    this.message = message\n    this.cause = cause\n  }\n}\n","import { ContractPromise } from '@polkadot/api-contract'\nimport { stringCamelCase } from '@polkadot/util'\n\n/**\n * Returns the ABI message for the given method name within the given contract.\n */\nexport const getAbiMessage = (contract: ContractPromise, method: string) => {\n  const abiMessage = contract.abi.messages.find(\n    (m) => stringCamelCase(m.method) === stringCamelCase(method),\n  )\n  if (!abiMessage) {\n    throw new Error(`\"${method}\" not found in Contract`)\n  }\n  return abiMessage\n}\n","import { ContractPromise } from '@polkadot/api-contract'\nimport { ContractExecResult } from '@polkadot/types/interfaces'\nimport { AnyJson, TypeDef } from '@polkadot/types/types'\nimport { getAbiMessage } from './getAbiMessage'\n\n/**\n * Helper types & functions\n * SOURCE: https://github.com/paritytech/contracts-ui (GPL-3.0-only)\n */\ntype ContractResultErr = {\n  Err: AnyJson\n}\n\ninterface ContractResultOk {\n  Ok: AnyJson\n}\n\nfunction isErr(o: ContractResultErr | ContractResultOk | AnyJson): o is ContractResultErr {\n  return typeof o === 'object' && o !== null && 'Err' in o\n}\n\nfunction isOk(o: ContractResultErr | ContractResultOk | AnyJson): o is ContractResultOk {\n  return typeof o === 'object' && o !== null && 'Ok' in o\n}\n\nfunction getReturnTypeName(type: TypeDef | null | undefined) {\n  return type?.lookupName || type?.type || ''\n}\n\n/**\n * Decodes & unwraps outputs and errors of a given result, contract, and method.\n * Parsed error message can be found in `decodedOutput` if `isError` is true.\n * SOURCE: https://github.com/paritytech/contracts-ui (GPL-3.0-only)\n */\nexport function decodeOutput(\n  { result }: Pick<ContractExecResult, 'result' | 'debugMessage'>,\n  contract: ContractPromise,\n  method: string,\n): {\n  output: any\n  decodedOutput: string\n  isError: boolean\n} {\n  let output\n  let decodedOutput = ''\n  let isError = true\n\n  if (result.isOk) {\n    const flags = result.asOk.flags.toHuman()\n    isError = flags.includes('Revert')\n    const abiMessage = getAbiMessage(contract, method)\n    const returnType = abiMessage.returnType\n    const returnTypeName = getReturnTypeName(returnType)\n    const registry = contract.abi.registry\n    const r = returnType\n      ? registry.createTypeUnsafe(returnTypeName, [result.asOk.data]).toHuman()\n      : '()'\n    output = isOk(r) ? r.Ok : isErr(r) ? r.Err : r\n\n    const errorText = isErr(output)\n      ? typeof output.Err === 'object'\n        ? JSON.stringify(output.Err, null, 2)\n        : output.Err?.toString() ?? 'Error'\n      : output !== 'Ok'\n      ? output?.toString() || 'Error'\n      : 'Error'\n\n    const okText = isOk(r)\n      ? typeof output === 'object'\n        ? JSON.stringify(output, null, '\\t')\n        : output?.toString() ?? '()'\n      : JSON.stringify(output, null, '\\t') ?? '()'\n\n    decodedOutput = isError ? errorText : okText\n  }\n\n  return {\n    output,\n    decodedOutput,\n    isError,\n  }\n}\n","import { ApiPromise, HttpProvider, WsProvider } from '@polkadot/api'\nimport { ApiOptions } from '@polkadot/api/types'\nimport log from 'loglevel'\nimport { SupportedChainId, allChains } from '../constants'\nimport { Chain } from '../types'\n\nlet _api: ApiPromise | undefined = undefined\nlet _chain: Chain | undefined = undefined\n\n/**\n * Helper to initialize & cache `@polkadot/api`.\n */\nexport const getApi = async (chainId: SupportedChainId, options?: ApiOptions) => {\n  // Return cached object if possible\n  if (_api && _chain?.network === chainId) {\n    return _api\n  }\n\n  // Get chain\n  const chain = allChains.find((c) => c.network === chainId)\n  const rpcUrl = chain?.rpcUrls?.[0]\n  if (!chain || !rpcUrl) {\n    throw new Error(`Given chain '${chainId}' not supported.`)\n  }\n\n  // Initialize api\n  const provider = rpcUrl.startsWith('http') ? new HttpProvider(rpcUrl) : new WsProvider(rpcUrl)\n  const api = await ApiPromise.create({\n    provider,\n    noInitWarn: true,\n    ...options,\n  })\n  await api.isReadyOrError\n  log.debug(`Initialized API for chain '${chainId}'`)\n\n  // Cache objects\n  _api = api\n  _chain = chain\n\n  return api\n}\n","import { ApiPromise } from '@polkadot/api'\nimport type { WeightV2 } from '@polkadot/types/interfaces'\nimport { BN, bnToBn } from '@polkadot/util'\n\n/**\n * Helper function that returns Weights V2 `gasLimit` object.\n */\nexport const getGasLimit = (api: ApiPromise, _refTime: string | BN, _proofSize: string | BN) => {\n  const refTime = bnToBn(_refTime)\n  const proofSize = bnToBn(_proofSize)\n\n  return api.registry.createType('WeightV2', {\n    refTime,\n    proofSize,\n  }) as WeightV2\n}\n\n/**\n * Helper function that returns the maximum gas limit Weights V2 object\n * for an extrinsiv based on the api chain constants.\n * NOTE: It's reduced by a given factor (defaults to 80%) to avoid storage exhaust.\n */\nexport const getMaxGasLimit = (api: ApiPromise, reductionFactor = 0.8) => {\n  const blockWeights = api.consts.system.blockWeights.toPrimitive() as any\n  const maxExtrinsic = blockWeights?.perClass?.normal?.maxExtrinsic\n  const maxRefTime = maxExtrinsic?.refTime\n    ? bnToBn(maxExtrinsic.refTime)\n        .mul(new BN(reductionFactor * 100))\n        .div(new BN(100))\n    : new BN(0)\n  const maxProofSize = maxExtrinsic?.proofSize\n    ? bnToBn(maxExtrinsic.proofSize)\n        .mul(new BN(reductionFactor * 100))\n        .div(new BN(100))\n    : new BN(0)\n\n  return getGasLimit(api, maxRefTime, maxProofSize)\n}\n","import { ApiPromise } from '@polkadot/api'\nimport { ContractPromise } from '@polkadot/api-contract'\nimport { ContractAddresses, ContractId, SupportedChainId } from '../constants'\nimport { getContract, getContractAddress } from '../deployments'\n\nlet _routerContract: ContractPromise | undefined = undefined\nlet _routerContractAddress: string | undefined = undefined\n\n/**\n * Helper to initialize & cache `ContractPromise` for `azns_router`.\n */\nexport const getRouterContract = async (\n  api: ApiPromise,\n  chainId: SupportedChainId,\n  customContractAddresses?: ContractAddresses,\n) => {\n  const contractAddress = getContractAddress(chainId, ContractId.Router, customContractAddresses)\n\n  // Return cached object if possible\n  if (_routerContract && _routerContractAddress && contractAddress === _routerContractAddress) {\n    return _routerContract\n  }\n\n  const { contract } = await getContract(api, chainId, ContractId.Router, customContractAddresses)\n\n  // Cache objects\n  _routerContract = contract\n  _routerContractAddress = contractAddress\n\n  return _routerContract\n}\n","import log from 'loglevel'\nimport { SupportedChainId, SupportedTLD, allSupportedChainIds } from '../constants'\nimport { getSupportedTLDs } from '../deployments'\nimport { ErrorBase } from '../helpers/ErrorBase'\nimport { decodeOutput } from '../helpers/decodeOutput'\nimport { getApi } from '../helpers/getApi'\nimport { getMaxGasLimit } from '../helpers/getGasLimit'\nimport { getRouterContract } from '../helpers/getRouterContract'\nimport { BaseResolveOptions } from '../types'\nimport { sanitizeDomain } from '../utils/sanitizeDomain'\n\nexport type ResolveDomainErrorName =\n  | 'UNSUPPORTED_NETWORK'\n  | 'UNSUPPORTED_TLD'\n  | 'INVALID_DOMAIN_FORMAT'\n  | 'CONTRACT_ERROR'\n  | 'OTHER_ERROR'\nexport class ResolveDomainError extends ErrorBase<ResolveDomainErrorName> {}\n\n/**\n * @param skipSanitization Uses the exact given domain w/o sanitization like lowercasing (default: false)\n */\nexport type ResolveDomainOptions = BaseResolveOptions & {\n  skipSanitization?: boolean\n}\n\n/**\n * Resolves a given domain to the assigned address.\n * @param domain Domain to resolve (e.g. `domains.azero`)\n * @param options Options (see `ResolveDomainOptions` definition)\n * @returns Address as string (null, if domain not found) or error\n */\nexport const resolveDomainToAddress = async (\n  domain: string,\n  options?: Partial<ResolveDomainOptions>,\n): Promise<\n  { address: string | null; error: undefined } | { address: undefined; error: ResolveDomainError }\n> => {\n  try {\n    // Merge default options\n    const _o: ResolveDomainOptions = Object.assign(\n      {\n        chainId: SupportedChainId.AlephZero,\n      },\n      options,\n    )\n    log.setLevel(_o.debug ? 'DEBUG' : 'WARN')\n\n    // Check if given chainId is supported\n    if (!allSupportedChainIds.includes(_o.chainId)) {\n      return {\n        address: undefined,\n        error: new ResolveDomainError({\n          name: 'UNSUPPORTED_NETWORK',\n          message: `Unsupported chainId '${\n            _o.chainId\n          }' (must be one of: ${allSupportedChainIds.join(', ')})`,\n        }),\n      }\n    }\n\n    // Sanitize domain & Check if format is valid\n    const _domain = _o.skipSanitization ? domain : sanitizeDomain(domain)\n    const regex = new RegExp(`^(?:([^.]+)\\\\.)([^.]+)$`)\n    const regexResult = regex.exec(_domain)\n    if (!regexResult || regexResult.length !== 3) {\n      return {\n        address: undefined,\n        error: new ResolveDomainError({\n          name: 'INVALID_DOMAIN_FORMAT',\n          message: `Domain must be in format 'name.tld'`,\n        }),\n      }\n    }\n\n    // Check if TLD is supported\n    const [, , tld] = regexResult\n    const supportedTLDs = getSupportedTLDs(_o.chainId)\n    if (!supportedTLDs.includes(tld as SupportedTLD) && _o.chainId !== SupportedChainId.Development)\n      return {\n        address: undefined,\n        error: new ResolveDomainError({\n          name: 'UNSUPPORTED_TLD',\n          message: `Unsupported TLD '${tld}' on '${_o.chainId}'`,\n        }),\n      }\n\n    // Initialize API & contract\n    const api = _o?.customApi || (await getApi(_o.chainId))\n    const routerContract = await getRouterContract(api, _o.chainId, _o.customContractAddresses)\n\n    // Query contract\n    const response = await routerContract.query.getAddress(\n      '',\n      { gasLimit: getMaxGasLimit(api) },\n      _domain,\n    )\n    const { output, isError, decodedOutput } = decodeOutput(response, routerContract, 'get_address')\n    let address: string | null = null\n    if (isError && decodedOutput !== 'CouldNotResolveDomain') {\n      const message = decodedOutput\n        ? `Contract error while resolving domain '${_domain}': ${decodedOutput}`\n        : `Contract failed while resolving domain '${_domain}' without error message`\n      log.error(message)\n      return {\n        address: undefined,\n        error: new ResolveDomainError({\n          name: 'CONTRACT_ERROR',\n          message,\n          cause: decodedOutput,\n        }),\n      }\n    } else if (!isError) {\n      address = output.Ok\n    }\n\n    log.debug(\n      address\n        ? `Resolved address for domain '${_domain}': ${address}`\n        : `Domain '${_domain}' not found`,\n    )\n    return { address, error: undefined }\n  } catch (error) {\n    log.debug(`Error while resolving domain '${domain}':`, error)\n    return {\n      address: undefined,\n      error: new ResolveDomainError({\n        name: 'OTHER_ERROR',\n        message: (error as any)?.message || 'Unexpected error while resolving domain',\n        cause: error,\n      }),\n    }\n  }\n}\n","/**\n * Sanitizes a given domain string (e.g. `Name.azero  ` → `name.azero`).\n * By default, the domain will be trimmed and converted to lowercase.\n */\nexport interface SanitizeDomainOptions {\n  trim?: boolean\n  lowercase?: boolean\n  replaceUnderscores?: boolean\n  removeOuterNonAlphanumeric?: boolean\n  removeDots?: boolean\n}\nexport const sanitizeDomain = (value?: string, options?: SanitizeDomainOptions): string => {\n  if (!value || typeof value !== 'string') return ''\n\n  // Merge default options\n  const _o = Object.assign(\n    {\n      trim: true,\n      lowercase: true,\n    } satisfies SanitizeDomainOptions,\n    options,\n  )\n\n  // Sanitize value\n  let _value = value\n  if (_o.trim) _value = _value.trim()\n  if (_o.lowercase) _value = _value.toLowerCase()\n  if (_o.replaceUnderscores) _value = _value.replaceAll('_', '-')\n  if (_o.removeOuterNonAlphanumeric)\n    _value = _value = _value.replace(/^[^a-z0-9]+|[^a-z0-9]+$/g, '')\n\n  return _value\n}\n"],"mappings":"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","names":["require_metadata","__commonJSMin","exports","module","src_exports","__export","CONTRACT_ADDRESSES","ContractId","ResolveAddressError","ResolveDomainError","SupportedChainId","SupportedTLD","alephzero","alephzeroTestnet","allChains","allSupportedChainIds","development","getContract","getContractAbi","getContractAddress","getSupportedTLDs","resolveAddressToDomain","resolveDomainToAddress","sanitizeDomain","__toCommonJS","SupportedChainId","allSupportedChainIds","alephzero","alephzeroTestnet","development","allChains","SupportedTLD","ContractId","CONTRACT_ADDRESSES","import_api_contract","import_loglevel","getSupportedTLDs","chainId","getContractAbi","contractId","getContractAddress","customContractAddresses","CONTRACT_ADDRESSES","getContract","api","abi","address","contract","log","import_util","import_util_crypto","import_loglevel","ErrorBase","name","message","cause","import_util","getAbiMessage","contract","method","abiMessage","m","isErr","o","isOk","getReturnTypeName","type","decodeOutput","result","contract","method","output","decodedOutput","isError","returnType","getAbiMessage","returnTypeName","registry","r","errorText","okText","import_api","import_loglevel","_api","_chain","getApi","chainId","options","chain","allChains","c","rpcUrl","provider","api","log","import_util","getGasLimit","api","_refTime","_proofSize","refTime","proofSize","getMaxGasLimit","reductionFactor","maxExtrinsic","maxRefTime","maxProofSize","_routerContract","_routerContractAddress","getRouterContract","api","chainId","customContractAddresses","contractAddress","getContractAddress","contract","getContract","ResolveAddressError","ErrorBase","resolveAddressToDomain","address","options","_o","log","allSupportedChainIds","api","getApi","routerContract","getRouterContract","_address","prefix","response","getMaxGasLimit","allPrimaryDomains","output","isError","decodedOutput","decodeOutput","message","domain","primaryDomain","error","import_loglevel","sanitizeDomain","value","options","_o","_value","ResolveDomainError","ErrorBase","resolveDomainToAddress","domain","options","_o","log","allSupportedChainIds","_domain","sanitizeDomain","regexResult","tld","getSupportedTLDs","api","getApi","routerContract","getRouterContract","response","getMaxGasLimit","output","isError","decodedOutput","decodeOutput","address","message","error"]}